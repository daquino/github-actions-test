name: Version Update Testing
on:
  push:
    branches: [ main ]

env:
  AWS_REGION : us-west-2

permissions:
      id-token: write
      contents: write
jobs:
  dev_delivery:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    environment: Development
    concurrency:
      group: ${{ format('{0}-{1}', github.workflow, github.job) }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Getting the current version
        id: current_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Simulating deploying version to dev environment
        run: |
          echo "Simulating deployment of version ${{ steps.current_version.outputs.VERSION }} to dev"

  prod_delivery:
    needs: dev_delivery
    runs-on: ubuntu-latest
    environment: Prod
    concurrency:
      group: ${{ format('{0}-{1}', github.workflow, github.job) }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Getting the current version
        id: current_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Simulating deploying version to prod environment
        run: |
          echo "Simulating deployment of version ${{ steps.current_version.outputs.VERSION }} to prod"

      - name: Tag current version
        run: |
          VERSION=$(cat VERSION)
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git tag -a $VERSION -m "Version $VERSION"
          git push --tags          

      - name: Read version from file and increment minor version
        id: increment_version
        run: |
          VERSION=$(cat VERSION)
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          VERSION_PARTS[1]=$((VERSION_PARTS[1] + 1))
          VERSION_PARTS[2]=0
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo $NEW_VERSION > VERSION
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_OUTPUT"
      
      - name: Commit new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add VERSION
          git commit -m "Increment version to ${{ steps.increment_version.outputs.NEW_VERSION }}"